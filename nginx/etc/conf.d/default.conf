js_import authService from js/index.js;

proxy_cache_path /var/cache/nginx_jwk_cache levels=1:2 keys_zone=jwk_response:10m max_size=100m inactive=10m use_temp_path=off;

map $http_authorization $header_token {
    "~*^Bearer (.*)$" $1;
    default $http_authorization;
}

server {
    listen 6000;
    js_var $no_auth_reason;

    location = .validate {
        internal;
        js_content authService.validateJwt;
    }

    location /kc/ {
        internal;
        gunzip on;
        proxy_pass http://kc:8080/;        
        proxy_cache jwk_response;
    }

    location /access/ {
        auth_request .validate;
        error_page 401 = @unauthorized;
        
        proxy_pass http://access:3000/;
    }

    location @unauthorized {
        internal;
        default_type application/json;
        add_header Content-Type "application/json";
        if ($no_auth_reason = 'bad_signature') {
            return 400 '{
                "success": false,
                "error": "invalid signature"
            }';
        }

        if ($no_auth_reason = 'invalid_jwt') {
            return 400 '{
                "success": false,
                "error": "token is malformed"
            }';
        }
        if ($no_auth_reason = 'empty_token') {
            return 400 '{
                "success": false,
                "error": "token is empty"
            }';
        }
        if ($no_auth_reason = 'bad_introspection') {
            return 500 '{
                "success": false,
                "error": "introspection failed"
            }';
        }
        if ($no_auth_reason = 'not_active') {
            return 403 '{
                "success": false,
                "error": "token is not active"
            }';
        }
        if ($no_auth_reason = 'no_roles') {
            return 401 '{
                "success": false,
                "error": "you are not authorized to access this resource"
            }';
        }
        if ($no_auth_reason = 'cannot_parse') {
            return 500 '{
                "success": false,
                "error": "parsing error"
            }';
        }
        return 500 '{
            "success": false,
            "error": "something unknown happened :O"
        }';
        }
}
